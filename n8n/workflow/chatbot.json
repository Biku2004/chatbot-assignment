{
  "meta": {
    "instanceId": "n8n"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot-action",
        "responseMode": "responseNode"
      },
      "id": "webhook-node",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.session_variables['x-hasura-user-id'] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "validate-user",
      "name": "Validate User",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://ufaxigohkmnolsyillmf.hasura.ap-south-1.nhost.run/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-hasura-admin-secret",
              "value": "+4;q#Vn9ERB,TT(hGhkR^W;dxg##-Z5A"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={\n  \"query\": \"query GetChat($chatId: uuid!, $userId: uuid!) { chats(where: {id: {_eq: $chatId}, user_id: {_eq: $userId}}) { id user_id } }\",\n  \"variables\": {\n    \"chatId\": \"{{ $json.input.chatId }}\",\n    \"userId\": \"{{ $json.session_variables['x-hasura-user-id'] }}\"\n  }\n}"
      },
      "id": "verify-chat-ownership",
      "name": "Verify Chat Ownership",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        680,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.data.chats.length }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "check-ownership",
      "name": "Check Ownership",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={\n  \"model\": \"microsoft/wizardlm-2-8x22b\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a helpful AI assistant. Provide concise and helpful responses.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"{{ $('Webhook').item.json.input.message }}\"\n    }\n  ],\n  \"max_tokens\": 500,\n  \"temperature\": 0.7\n}"
      },
      "id": "call-openrouter",
      "name": "Call OpenRouter",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1120,
        100
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "botResponse",
              "value": "={{ $json.choices[0].message.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "store-bot-response",
      "name": "Store Bot Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1340,
        100
      ]
    },
    {
      "parameters": {
        "url": "https://ufaxigohkmnolsyillmf.hasura.ap-south-1.nhost.run/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-hasura-admin-secret",
              "value": "+4;q#Vn9ERB,TT(hGhkR^W;dxg##-Z5A"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={\n  \"query\": \"mutation SaveBotResponse($chatId: uuid!, $content: String!) { insert_messages_one(object: {chat_id: $chatId, content: $content, role: \\\"assistant\\\"}) { id content role created_at } }\",\n  \"variables\": {\n    \"chatId\": \"{{ $('Webhook').item.json.input.chatId }}\",\n    \"content\": \"{{ $('Store Bot Response').item.json.botResponse }}\"\n  }\n}"
      },
      "id": "save-response",
      "name": "Save Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1560,
        100
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Message sent successfully\",\n  \"response\": \"{{ $('Store Bot Response').item.json.botResponse }}\"\n}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1780,
        100
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Unauthorized: You don't own this chat\",\n  \"response\": null\n}",
        "options": {
          "responseCode": 403
        }
      },
      "id": "unauthorized-response",
      "name": "Unauthorized Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Invalid request\",\n  \"response\": null\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        680,
        400
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Validate User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate User": {
      "main": [
        [
          {
            "node": "Verify Chat Ownership",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify Chat Ownership": {
      "main": [
        [
          {
            "node": "Check Ownership",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Ownership": {
      "main": [
        [
          {
            "node": "Call OpenRouter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Unauthorized Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call OpenRouter": {
      "main": [
        [
          {
            "node": "Store Bot Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Bot Response": {
      "main": [
        [
          {
            "node": "Save Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}